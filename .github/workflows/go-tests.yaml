# Copyright 2023 The Cockroach Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

name: Golang Tests
permissions:
  contents: read
  packages: read
on:
  workflow_call:
  workflow_dispatch:
jobs:
  # Static code-quality checks.
  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: crlfmt returns no deltas
        if: ${{ !cancelled() }}
        run: |
          DELTA=$(go run github.com/cockroachdb/crlfmt -ignore _gen.go .)
          echo $DELTA
          test -z "$DELTA"

      - name: Copyright headers
        if: ${{ !cancelled() }}
        run: go run github.com/google/addlicense -c "The Cockroach Authors" -l apache -s -v  -check  -ignore '**/testdata/**/*.sql' .

      - name: Lint
        if: ${{ !cancelled() }}
        run: go run golang.org/x/lint/golint -set_exit_status ./...

      - name: Static checks
        if: ${{ !cancelled() }}
        run: go run honnef.co/go/tools/cmd/staticcheck -checks all ./...

      - name: Go Vet
        if: ${{ !cancelled() }}
        run: go vet ./...

      # Check that all dependencies have licenses and that those
      # licenses are reasonably permissive. License files for modules
      # reachable from the entry point will be bundled and are visible
      # through the licenses subcommand.
      - name: License Checks
        if: ${{ !cancelled() }}
        run: go run github.com/google/go-licenses check ./...

  tests:
    name: Go Tests
    runs-on: ubuntu-latest
    timeout-minutes: 10

    env:
      COVER_OUT: coverage.out
      TEST_OUT: go-test.json
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: Go Tests
        run: >
          go test
          -count 1
          -coverpkg=./internal/...
          -covermode=atomic
          -coverprofile=${{ env.COVER_OUT }}
          -race
          -tags target_all
          -v
          ./...

      - name: Upload coverage
        uses: codecov/codecov-action@v4
        continue-on-error: true # Sometimes CodeCov has a bad day.
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ${{ env.COVER_OUT }}
